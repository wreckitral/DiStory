"use strict";(self.webpackChunkdistory=self.webpackChunkdistory||[]).push([[524],{949:(e,t,n)=>{var o={};n.r(o),n.d(o,{checkAuthenticatedRoute:()=>p,checkUnauthenticatedRouteOnly:()=>g,getAccessToken:()=>d,getLogout:()=>v,putAccessToken:()=>u,removeAccessToken:()=>h});var i={};function r(e){const t=e.split("/");return{resource:t[1]||null,id:t[2]||null}}function a(){return location.hash.replace("#","")||"/"}function s(){return function(e){let t="";return e.resource&&(t=t.concat(`/${e.resource}`)),e.id&&(t=t.concat("/:id")),t||"/"}(r(a()))}n.r(i),n.d(i,{addToFavorites:()=>H,checkIsFavorite:()=>_,createStory:()=>O,getAllStories:()=>P,getFavorites:()=>z,getLogin:()=>M,getRegistered:()=>$,getStoryById:()=>U,removeFromFavorites:()=>q,subscribeNotification:()=>R,unsubscribeNotification:()=>j});const c="accessToken",l="https://story-api.dicoding.dev/v1";function d(){try{const e=localStorage.getItem(c);return"null"===e||"undefined"===e?null:e}catch(e){return console.error("getAccessToken: error:",e),null}}function u(e){try{return localStorage.setItem(c,e),!0}catch(e){return console.error("putAccessToken: error:",e),!1}}function h(){try{return localStorage.removeItem(c),!0}catch(e){return console.error("getLogout: error:",e),!1}}const m=["/signin","/signup"];function g(e){const t=s(),n=!!d();return m.includes(t)&&n?(location.hash="/",null):e}function p(e){return d()?e:(location.hash="/signin",null)}function v(){h()}class y{constructor({view:e,api:t}){this.view=e,this.api=t}async processSignup(e){if(this.view.validateForm()){this.view.displayLoadingState();try{const t={name:e.fullName,email:e.email,password:e.password},n=await this.api.getRegistered(t);0==n.error?this.view.showSuccessMessage(n.message):(console.warn(n),this.view.showErrorMessage(n.message||"Account creation failed"))}catch(e){console.error("Signup process error:",e),this.view.showErrorMessage(e.message||"Unable to process your request")}finally{this.view.resetButtonState()}}}}var f=n(148);const w="stories",b="favorites";let S=null;const k=async()=>(S||(console.log("Initializing IndexedDB connection"),S=(0,f.P2)("distory-db",1,{upgrade(e){console.log("Upgrading IndexedDB schema to version",1),e.objectStoreNames.contains(w)||(e.createObjectStore(w,{keyPath:"id"}).createIndex("by-date","createdAt"),console.log("Created stories store")),e.objectStoreNames.contains(b)||(e.createObjectStore(b,{keyPath:"id"}),console.log("Created favorites store"))}})),S);k().catch((e=>console.error("Failed to initialize database:",e)));const E=async()=>S||k(),I=async e=>{if(!e||!e.id)throw console.error("Cannot save story without ID:",e),new Error("Story must have an ID to be saved");console.log(`Saving story to IndexedDB: ${e.id}`);try{const t=await E();return await t.put(w,e),console.log(`Successfully saved story ${e.id} to IndexedDB`),!0}catch(t){throw console.error(`Error saving story ${e.id} to IndexedDB:`,t),t}},B=async()=>{console.log("Getting all stories from IndexedDB");try{const e=await E(),t=await e.getAll(w);return console.log(`Retrieved ${t.length} stories from IndexedDB`),t}catch(e){return console.error("Error getting stories from IndexedDB:",e),[]}},C=async e=>{console.log(`Getting story ${e} from IndexedDB`);try{const t=await E(),n=await t.get(w,e);return console.log(`Story ${e} found:`,!!n),n}catch(t){return console.error(`Error getting story ${e} from IndexedDB:`,t),null}},N=async e=>{if(!e||!e.id)throw console.error("Cannot save favorite without story ID:",e),new Error("Story must have an ID to be saved as favorite");console.log(`Saving favorite story ${e.id} to IndexedDB`);try{const t=await E();return await t.put(b,{...e,favoriteAt:(new Date).toISOString()}),console.log(`Successfully saved favorite story ${e.id} to IndexedDB`),!0}catch(t){throw console.error(`Error saving favorite story ${e.id} to IndexedDB:`,t),t}},x=async()=>{console.log("Getting all favorites from IndexedDB");try{const e=await E(),t=await e.getAll(b);return console.log(`Retrieved ${t.length} favorites from IndexedDB`),t}catch(e){return console.error("Error getting favorites from IndexedDB:",e),[]}},F=async e=>{console.log(`Removing favorite ${e} from IndexedDB`);try{const t=await E();return await t.delete(b,e),console.log(`Successfully removed favorite ${e} from IndexedDB`),!0}catch(t){throw console.error(`Error removing favorite ${e} from IndexedDB:`,t),t}},T=async e=>{console.log(`Checking if story ${e} is a favorite`);try{const t=await E(),n=!!await t.get(b,e);return console.log(`Story ${e} is${n?"":" not"} a favorite`),n}catch(t){return console.error(`Error checking if story ${e} is a favorite:`,t),!1}};"undefined"!=typeof window&&(window.debugDB={checkStories:B,checkFavorites:x,clearStories:async()=>{console.log("Clearing all stories from IndexedDB");try{const e=(await E()).transaction(w,"readwrite");return await e.store.clear(),await e.done,console.log("Successfully cleared all stories from IndexedDB"),!0}catch(e){throw console.error("Error clearing stories from IndexedDB:",e),e}},clearFavorites:async()=>{console.log("Clearing all favorites from IndexedDB");try{const e=(await E()).transaction(b,"readwrite");return await e.store.clear(),await e.done,console.log("Successfully cleared all favorites from IndexedDB"),!0}catch(e){throw console.error("Error clearing favorites from IndexedDB:",e),e}}},console.log("DB debugging helpers available at window.debugDB"));const A={REGISTER:`${l}/register`,LOGIN:`${l}/login`,ALL_STORIES:`${l}/stories`,CREATE_STORY:`${l}/stories`,SUBSCRIBE_NOTIFICATION:`${l}/notifications/subscribe`,UNSUBSCRIBE_NOTIFICATION:`${l}/notifications/subscribe`,GET_PUSH_PUBLIC_KEY:`${l}/notifications/vapid-public-key`},D=async(e,t)=>{try{const t=d(),n=await fetch(e,{headers:{Authorization:`Bearer ${t}`}}),o=await n.json();return!1===o.error&&o.listStory&&(Array.isArray(o.listStory)?await(async e=>{console.log("Saving multiple stories to IndexedDB:",e.length);try{const t=(await E()).transaction(w,"readwrite"),n=e.filter((e=>!!e.id||(console.warn("Skipping story without id:",e),!1)));return await Promise.all([...n.map((e=>(console.log(`Saving story ${e.id} to IndexedDB`),t.store.put(e)))),t.done]),console.log("Successfully saved stories to IndexedDB"),!0}catch(e){return console.error("Error saving stories to IndexedDB:",e),!1}})(o.listStory):await I(o.listStory)),{...o,ok:n.ok,source:"network"}}catch(t){console.warn(`Network error when fetching ${e}, falling back to offline data`,t);try{return{error:!1,message:"Retrieved from offline storage",listStory:await B(),ok:!0,source:"cache"}}catch(e){throw console.error("Failed to retrieve data from offline storage",e),new Error("Unable to fetch data. Please check your connection and try again.")}}};async function $({name:e,email:t,password:n}){const o=JSON.stringify({name:e,email:t,password:n});try{const e=await fetch(A.REGISTER,{method:"POST",headers:{"Content-Type":"application/json"},body:o});return{...await e.json(),ok:e.ok}}catch(e){return console.error("Registration failed",e),{error:!0,message:"Network error. Please check your connection and try again.",ok:!1}}}async function M({email:e,password:t}){const n=JSON.stringify({email:e,password:t});try{const e=await fetch(A.LOGIN,{method:"POST",headers:{"Content-Type":"application/json"},body:n});return{...await e.json(),ok:e.ok}}catch(e){return console.error("Login failed",e),{error:!0,message:"Network error. Please check your connection and try again.",ok:!1}}}async function P(){return D(A.ALL_STORIES,"stories")}async function U(e){if(!navigator.onLine)try{return{error:!1,message:"Retrieved from offline storage",data:await C(e),ok:!0,source:"cache"}}catch(e){return console.error("Failed to retrieve story from offline storage",e),{error:!0,message:"Story not available offline",ok:!1}}try{const t=d(),n=await fetch(`${A.ALL_STORIES}/${e}`,{headers:{Authorization:`Bearer ${t}`}}),o=await n.json();return o.story&&await I(o.story),{...o,ok:n.ok,source:"network"}}catch(t){console.error(`Failed to fetch story id ${e}`,t);try{const t=await C(e);if(t)return{error:!1,message:"Retrieved from offline storage",data:t,ok:!0,source:"cache"}}catch(e){console.error("Failed to retrieve story from offline storage",e)}return{error:!0,message:"Failed to load story. Please check your connection and try again.",ok:!1}}}async function O(e){if(!navigator.onLine)return{error:!0,message:"You are offline. Please connect to the internet to create a story.",ok:!1};try{const t=d(),n=await fetch(A.CREATE_STORY,{method:"POST",headers:{Authorization:`Bearer ${t}`},body:e}),o=await n.json();return o.data&&await I(o.data),{...o,ok:n.ok}}catch(e){return console.error("Failed to create story",e),{error:!0,message:"Failed to create story. Please check your connection and try again.",ok:!1}}}async function R(e){if(!navigator.onLine)return{error:!0,message:"You are offline. Push notification subscription requires internet connection.",ok:!1};try{const t=d();if(!t)return{error:!0,message:"Authentication required. Please log in to subscribe to notifications.",ok:!1};console.log("Sending subscription to server:",JSON.stringify(e));const n=await fetch(A.SUBSCRIBE_NOTIFICATION,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${t}`},body:JSON.stringify(e)}),o=await n.json();if(!n.ok||!0===o.error)return{error:!0,message:o.message||`Server error: ${n.status}`,ok:!1};try{localStorage.setItem("pushSubscription",JSON.stringify({endpoint:e.endpoint,timestamp:(new Date).toISOString()}))}catch(e){console.warn("Could not store push subscription reference",e)}return{...o,ok:!0}}catch(e){return console.error("Failed to subscribe to notifications",e),{error:!0,message:e.message||"Failed to subscribe to notifications. Please try again later.",ok:!1}}}async function j(e){if(!navigator.onLine)return{error:!0,message:"You are offline. Unsubscribing from notifications requires internet connection.",ok:!1};try{const t=d();if(!t)return{error:!0,message:"Authentication required. Please log in to unsubscribe from notifications.",ok:!1};console.log("Unsubscribing endpoint:",e);const n=await fetch(A.UNSUBSCRIBE_NOTIFICATION,{method:"DELETE",headers:{"Content-Type":"application/json",Authorization:`Bearer ${t}`},body:JSON.stringify({endpoint:e})}),o=await n.json();return n.ok&&!0!==o.error?(localStorage.removeItem("pushSubscription"),{...o,ok:!0}):{error:!0,message:o.message||`Server error: ${n.status}`,ok:!1}}catch(e){return console.error("Failed to unsubscribe from notifications",e),{error:!0,message:e.message||"Failed to unsubscribe from notifications. Please try again later.",ok:!1}}}async function H(e){try{return await N(e),{error:!1,message:"Story added to favorites",ok:!0}}catch(e){return console.error("Failed to add story to favorites",e),{error:!0,message:"Failed to add story to favorites",ok:!1}}}async function q(e){try{return await F(e),{error:!1,message:"Story removed from favorites",ok:!0}}catch(e){return console.error("Failed to remove story from favorites",e),{error:!0,message:"Failed to remove story from favorites",ok:!1}}}async function z(){try{return{error:!1,message:"Retrieved favorites from storage",data:await x(),ok:!0}}catch(e){return console.error("Failed to get favorites",e),{error:!0,message:"Failed to retrieve favorites",ok:!1}}}async function _(e){try{return{error:!1,data:await T(e),ok:!0}}catch(e){return console.error("Failed to check if story is a favorite",e),{error:!0,message:"Failed to check favorite status",ok:!1}}}class W{constructor(){this.presenter=null}async render(){return'\n      <div class="signup-page">\n        <div class="signup-card">\n          <h2 class="signup-heading">Join Distory</h2>\n          <p class="signup-tagline">Create an account to share your stories with the world</p>\n          <form id="signup-form" class="signup-form">\n            <div class="input-group">\n              <label for="fullname" class="form-label">Full Name</label>\n              <div class="input-wrapper">\n                <input\n                  type="text"\n                  id="fullname"\n                  class="form-input"\n                  placeholder="Enter your full name"\n                  required\n                >\n              </div>\n            </div>\n\n            <div class="input-group">\n              <label for="email-address" class="form-label">Email Address</label>\n              <div class="input-wrapper">\n                <input\n                  type="email"\n                  id="email-address"\n                  class="form-input"\n                  placeholder="example@domain.com"\n                  required\n                >\n              </div>\n            </div>\n\n            <div class="input-group">\n              <label for="user-password" class="form-label">Password</label>\n              <div class="input-wrapper">\n                <input\n                  type="password"\n                  id="user-password"\n                  class="form-input"\n                  placeholder="Create a strong password"\n                  required\n                >\n              </div>\n            </div>\n            <div class="form-actions">\n              <div id="action-button-container">\n                <button type="submit" class="btn-primary">Start Your Story Journey</button>\n              </div>\n              <p class="login-link">Already a storyteller? <a href="#/signin">Sign In</a></p>\n            </div>\n          </form>\n        </div>\n      </div>\n    '}async afterRender(){this.presenter=new y({view:this,api:i}),this._initializeEventListeners()}_initializeEventListeners(){const e=document.getElementById("signup-form"),t=document.getElementById("email-address");e.addEventListener("submit",(async e=>{e.preventDefault();const n={fullName:document.getElementById("fullname").value,email:t.value,password:document.getElementById("user-password").value};await this.presenter.processSignup(n)}))}showSuccessMessage(e){console.log(`Signup success: ${e}`),window.location.hash="/signin"}showErrorMessage(e){window.alert(`${e}`)}displayLoadingState(){document.getElementById("action-button-container").innerHTML='\n      <button type="submit" class="btn-primary btn-loading" disabled>\n        <span class="spinner"></span> Creating Account...\n      </button>\n    '}resetButtonState(){document.getElementById("action-button-container").innerHTML='\n      <button type="submit" class="btn-primary">Create Account</button>\n    '}validateForm(){const e=document.getElementById("fullname").value,t=document.getElementById("email-address").value,n=document.getElementById("user-password").value;let o=!0,i="";return!e||e.trim().length<3?(o=!1,i="Name must be at least 3 characters"):t&&t.includes("@")?(!n||n.length<6)&&(o=!1,i="Password must be at least 6 characters"):(o=!1,i="Please enter a valid email address"),o||this.showErrorMessage(i),o}}class G{#e;#t;#n;constructor({view:e,model:t,authModel:n}){this.#e=e,this.#t=t,this.#n=n}async getLogin({email:e,password:t}){try{this.#e.showSubmitLoadingButton();const n=await this.#t.getLogin({email:e,password:t});if(!n||1==n.error)throw new Error("Login gagal. Silakan periksa email dan password Anda.");await this.#n.putAccessToken(n.loginResult.token),this.#e.loginSuccessfully("Login berhasil")}catch(e){this.#e.loginFailed(e.message)}finally{this.#e.hideSubmitLoadingButton()}}}class Y{#o=null;async render(){return'\n            <section class="signup-page">\n              <div class="signup-card">\n                <h1 class="signup-heading">Sign In</h1>\n                <form id="login-form" class="signup-form">\n                  <div class="input-group">\n                    <label for="email-input" class="form-label">Email</label>\n                    <input\n                      type="email"\n                      id="email-input" name="email"\n                      class="form-input"\n                      placeholder="example@domain.com"\n                      required\n                    />\n                  </div>\n                  <div class="input-group">\n                    <label for="password-input" class="form-label">Password</label>\n                    <input type="password" id="password-input" name="password" class="form-input" required />\n                  </div>\n                  <div class="form-actions">\n                    <div id="submit-button-container">\n                      <button type="submit" class="btn-primary">Sign In</button>\n                    </div>\n                  </div>\n                  <p class="login-link">Don\'t have an account yet? <a href="#/signup">Sign Up</a></p>\n                </form>\n              </div>\n            </section>\n        '}async afterRender(){this.#o=new G({view:this,model:i,authModel:o}),this.#i()}#i(){document.getElementById("login-form").addEventListener("submit",(async e=>{e.preventDefault();const t={email:document.getElementById("email-input").value,password:document.getElementById("password-input").value};await this.#o.getLogin(t)}))}loginSuccessfully(e){console.log(e),location.hash="/"}loginFailed(e){alert(e)}showSubmitLoadingButton(){document.getElementById("submit-button-container").innerHTML='\n      <button type="submit" class="btn-primary btn-loading" disabled>\n        <span class="spinner"></span> Signing In...\n      </button>\n    '}hideSubmitLoadingButton(){document.getElementById("submit-button-container").innerHTML='\n      <button type="submit">Sign In</button>\n    '}}var V=n(481),J=n.n(V),K=n(927),Q=n(980);delete J().Icon.Default.prototype._getIconUrl,J().Icon.Default.mergeOptions({iconUrl:K,shadowUrl:Q});let Z=null;const X=new(J().Icon)({iconUrl:"https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-blue.png",shadowUrl:"https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png",iconSize:[25,41],iconAnchor:[12,41],popupAnchor:[1,-34],shadowSize:[41,41]});function ee(e,t=[-2.5489,118.0149],n=5){return Z&&Z.remove(),Z=J().map(e).setView(t,n),J().tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",{attribution:"&copy; OpenStreetMap contributors"}).addTo(Z),Z}function te(e,t=[]){const n=t.filter((e=>e.lat&&e.lon)).map((e=>({type:"Feature",properties:{name:e.name,description:e.description,photoUrl:e.photoUrl},geometry:{type:"Point",coordinates:[e.lon,e.lat]}})));J().geoJSON({type:"FeatureCollection",features:n},{pointToLayer:(e,t)=>J().marker(t,{icon:X}).bindPopup(`<b>${e.properties.name}</b><br>${e.properties.description}<br><img src="${e.properties.photoUrl}" width="100">`)}).addTo(e)}class ne{#e=null;#t=null;#r=null;constructor({view:e,model:t}){this.#e=e,this.#t=t}async loadStories(){const e=await this.#t.getAllStories();if(!1!==e.error||!Array.isArray(e.listStory))throw new Error(e.message||"Failed to load stories");{const t=e.listStory.map((e=>({...e,formattedDate:this.formatDate(e.createdAt)})));this.#e.showStories(t),this.initializeMap(t)}}async initNotificationControls(){const e=document.getElementById("enable-notifications"),t=document.getElementById("disable-notifications");if(!navigator.serviceWorker.controller){console.log("Service worker not controlling the page. Attempting to register...");try{const e=await navigator.serviceWorker.register("/service-worker.js");console.log("Service worker registered:",e),await new Promise((e=>{navigator.serviceWorker.controller?e():navigator.serviceWorker.addEventListener("controllerchange",(()=>{e()}))}))}catch(e){console.error("Service worker registration failed:",e),this.#e.updateNotificationUIState({isSupported:!0,isSubscribed:!1,error:!0,message:"Service worker registration failed. Push notifications may not work."})}}await this.updateNotificationStatus(),e.addEventListener("click",(async()=>{await this.enableNotifications()})),t.addEventListener("click",(async()=>{await this.disableNotifications()}))}areNotificationsSupported(){return"Notification"in window&&"serviceWorker"in navigator&&"PushManager"in window}async updateNotificationStatus(){try{this.#e.updateNotificationUIState({isLoading:!0,message:"Checking notification status..."});const e=Notification.permission;if(console.log("Current notification permission:",e),"denied"===e)return void this.#e.updateNotificationUIState({isSupported:!0,isSubscribed:!1,error:!0,message:"Notification permission denied. Please enable notifications in your browser settings."});const t=await navigator.serviceWorker.ready;console.log("Service worker ready:",t);const n=await t.pushManager.getSubscription();console.log("Current push subscription:",n),this.#e.updateNotificationUIState({isSupported:!0,isSubscribed:!!n,message:n?"You are subscribed to push notifications":"Notifications not enabled"})}catch(e){console.error("Error checking notification status:",e),this.#e.updateNotificationUIState({isSupported:!0,isSubscribed:!1,error:!0,message:"Error checking notification status: "+e.message})}}async requestNotificationPermission(){try{console.log("Requesting notification permission...");const e=await Notification.requestPermission();return console.log("Permission request result:",e),"granted"===e}catch(e){return console.error("Error requesting notification permission:",e),!1}}async enableNotifications(){try{if(!d())return void this.#e.updateNotificationUIState({isSupported:!0,isSubscribed:!1,error:!0,message:"You need to be logged in to enable notifications"});if(this.#e.updateNotificationUIState({isLoading:!0,message:"Setting up notifications..."}),!await this.requestNotificationPermission())return void this.#e.updateNotificationUIState({isSupported:!0,isSubscribed:!1,error:!0,message:"Notification permission denied"});const e=await navigator.serviceWorker.ready;console.log("Service worker registration for push:",e);let t=await e.pushManager.getSubscription();if(t&&(console.log("Existing subscription found, unsubscribing first"),await t.unsubscribe()),t=await this.createPushSubscription(e),!t)return void this.#e.updateNotificationUIState({isSupported:!0,isSubscribed:!1,error:!0,message:"Failed to create push subscription"});console.log("Created push subscription:",t);const n=btoa(String.fromCharCode.apply(null,new Uint8Array(t.getKey("p256dh")))).replace(/\+/g,"-").replace(/\//g,"_").replace(/=+$/,""),o=btoa(String.fromCharCode.apply(null,new Uint8Array(t.getKey("auth")))).replace(/\+/g,"-").replace(/\//g,"_").replace(/=+$/,""),i={endpoint:t.endpoint,keys:{p256dh:n,auth:o}};console.log("Sending subscription to server:",i);const r=await this.#t.subscribeNotification(i);if(r.error)return console.error("Server subscription error:",r.message),void this.#e.updateNotificationUIState({isSupported:!0,isSubscribed:!1,error:!0,message:r.message||"Failed to register subscription with server"});console.log("Successfully subscribed to push notifications:",r),this.#e.updateNotificationUIState({isSupported:!0,isSubscribed:!0,message:"Successfully subscribed to push notifications!"});try{this.showTestNotification()}catch(e){console.warn("Could not show test notification:",e)}}catch(e){console.error("Error enabling notifications:",e),this.#e.updateNotificationUIState({isSupported:!0,isSubscribed:!1,error:!0,message:`Error enabling notifications: ${e.message||"Unknown error"}`})}}async showTestNotification(){if("granted"===Notification.permission){const e=await navigator.serviceWorker.ready;await e.showNotification("Notifications Enabled",{body:"You will now receive updates for new stories!",icon:"/icons/128x128.ico",badge:"/icons/96x96.ico",vibrate:[100,50,100],tag:"test-notification"})}}async disableNotifications(){try{this.#e.updateNotificationUIState({isLoading:!0,message:"Disabling notifications..."});const e=await navigator.serviceWorker.ready,t=await e.pushManager.getSubscription();if(!t)return void this.#e.updateNotificationUIState({isSupported:!0,isSubscribed:!1,message:"No active subscription found"});console.log("Unsubscribing from push notifications:",t);const n=t.endpoint,o=await this.#t.unsubscribeNotification(n);if(o.error&&(console.warn("Server unsubscribe warning:",o.message),console.log("Server unsubscribe successful")),!await t.unsubscribe())return void this.#e.updateNotificationUIState({isSupported:!0,isSubscribed:!0,error:!0,message:"Failed to unsubscribe locally. Try again or restart your browser."});console.log("Successfully unsubscribed locally"),this.#e.updateNotificationUIState({isSupported:!0,isSubscribed:!1,message:"Push notifications disabled"})}catch(e){console.error("Error disabling notifications:",e),this.#e.updateNotificationUIState({isSupported:!0,error:!0,message:`Error disabling notifications: ${e.message||"Unknown error"}`})}}async createPushSubscription(e){try{const t="BCCs2eonMI-6H2ctvFaWg-UYdDv387Vno_bzUzALpB442r2lCnsHmtrx8biyPi_E-1fSGABK_Qs_GlvPoJJqxbk";if(!t)throw new Error("Could not retrieve server public key for push notifications");console.log("Using application server key:",t);const n=this.urlB64ToUint8Array(t);return await e.pushManager.subscribe({userVisibleOnly:!0,applicationServerKey:n})}catch(e){return console.error("Error creating push subscription:",e),null}}urlB64ToUint8Array(e){const t=(e+"=".repeat((4-e.length%4)%4)).replace(/\-/g,"+").replace(/_/g,"/"),n=window.atob(t),o=new Uint8Array(n.length);for(let e=0;e<n.length;++e)o[e]=n.charCodeAt(e);return o}formatDate(e){return new Date(e).toLocaleDateString("en-US",{year:"numeric",month:"short",day:"numeric"})}getStoryTemplate(e){return function(e){return`\n    <article class="story-card" data-story-id="${e.id}">\n      <div class="story-thumbnail">\n        <img src="${e.photoUrl||"/images/default-story.jpg"}"\n             alt="${e.name}"\n             onerror="this.src='/images/default-story.jpg'">\n      </div>\n      <div class="story-card-content">\n        <h3 class="story-title">${e.name}</h3>\n        <time class="story-date">${e.formattedDate}</time>\n        <p class="story-excerpt">${e.description}</p>\n      </div>\n      <div class="story-card-footer">\n        <span class="story-location">${e.lat+e.lon||"Unknown location"}</span>\n        <span class="story-read-more">Read more →</span>\n      </div>\n    </article>\n  `}(e)}initializeMap(e){if(0===e.length)return;if(!document.getElementById("main-map-container"))return;this.#r=ee("main-map-container"),te(this.#r,e);const t=e.filter((e=>e.lat&&e.lon));if(t.length>0){const n=t.map((e=>[e.lat,e.lon]));this.#r.fitBounds(n,{padding:[50,50],maxZoom:13}),this.#r.eachLayer((t=>{if(t.feature){const n=t.getPopup().getContent(),o=t.feature.geometry.coordinates,i=e.find((e=>e.lon===o[0]&&e.lat===o[1]));if(i){const e=n+`<button class="map-navigate-btn" data-story-id="${i.id}">View Story</button>`;t.getPopup().setContent(e),t.on("popupopen",(()=>{const e=document.querySelector(`.map-navigate-btn[data-story-id="${i.id}"]`);e&&e.addEventListener("click",(()=>{this.navigateToStoryDetail(i.id)}))}))}}}))}else this.#r.setView([-2.5489,118.0149],5)}navigateToStoryDetail(e){window.location.href=`#/detail-story/${e}`}}class oe{#o=null;async render(){return'\n            <section>\n              <h2>All Stories</h2>\n              <div class="notification-controls">\n                <button id="enable-notifications" class="btn btn-primary">\n                  <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="notification-icon">\n                    <path d="M18 8A6 6 0 0 0 6 8c0 7-3 9-3 9h18s-3-2-3-9"></path>\n                    <path d="M13.73 21a2 2 0 0 1-3.46 0"></path>\n                  </svg>\n                  Enable\n                </button>\n                <button id="disable-notifications" class="btn btn-secondary" style="display: none;">\n                  <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="notification-icon">\n                    <path d="M18 8A6 6 0 0 0 6 8c0 7-3 9-3 9h18s-3-2-3-9"></path>\n                    <path d="M13.73 21a2 2 0 0 1-3.46 0"></path>\n                    <line x1="1" y1="1" x2="23" y2="23"></line>\n                  </svg>\n                  Disable\n                </button>\n              </div>\n              <div id="main-map-container" style="height: 400px; margin-bottom: 20px; z-index:1;"></div>\n              <div id="stories-container">\n                <div class="stories-loading">\n                    <div class="spinner"></div>\n                </div>\n              </div>\n            </section>\n        '}async afterRender(){this.#o=new ne({view:this,model:i}),await this.#o.initNotificationControls(),await this.#o.loadStories()}showLoading(){document.getElementById("stories-container").innerHTML='\n            <div class="stories-loading">\n                <div class="spinner"></div>\n            </div>\n        '}showStories(e){const t=document.getElementById("stories-container");0!==e.length?(t.innerHTML=e.map((e=>this.#o.getStoryTemplate(e))).join(""),document.querySelectorAll(".story-card").forEach((e=>{e.addEventListener("click",(()=>{const t=e.dataset.storyId;this.#o.navigateToStoryDetail(t)}))})),this.#o.initializeMap(e)):t.innerHTML='\n                <div class="empty-stories">\n                    <h3>No stories found</h3>\n                    <p>Be the first to share your story!</p>\n                </div>\n            '}updateNotificationUIState(e){const t=document.getElementById("enable-notifications"),n=document.getElementById("disable-notifications");if(e.isSupported)return e.isLoading?(t.disabled=!0,void(n.disabled=!0)):e.error?(t.disabled=!1,void(n.disabled=!1)):void(e.isSubscribed?(t.style.display="none",n.style.display="inline-block",n.disabled=!1):(t.style.display="inline-block",n.style.display="none",t.disabled=!1));t.disabled=!0}}class ie{constructor({view:e,model:t}){this.view=e,this.model=t}async createStory(e){try{this.#a(e);const t=await this.model.createStory(e);t.error?this.view.showCreateFailed(t.message||"Failed to create story"):this.view.showCreateSuccess("Story added successfully!")}catch(e){this.view.showCreateFailed(e.message||"An unexpected error occurred"),console.error("Error creating story:",e)}}#a(e){const t=e.get("description");if(!t||""===t.trim())throw new Error("Description is required");const n=e.get("photo");if(!n)throw new Error("Photo is required");if(n.size>1048576)throw new Error("Photo size exceeds maximum limit of 1MB");if(!["image/jpeg","image/png","image/gif","image/jpg"].includes(n.type))throw new Error("Please select a valid image file (JPEG, PNG, or GIF)");const o=e.get("lat"),i=e.get("lon");if(o&&!i||!o&&i)throw new Error("Both latitude and longitude must be provided");if(o&&i){const e=parseFloat(o),t=parseFloat(i);if(isNaN(e)||isNaN(t))throw new Error("Location coordinates must be valid numbers");if(e<-90||e>90)throw new Error("Latitude must be between -90 and 90");if(t<-180||t>180)throw new Error("Longitude must be between -180 and 180")}}getCurrentLocation(){navigator.geolocation?navigator.geolocation.getCurrentPosition((e=>{const t=e.coords.latitude,n=e.coords.longitude;this.view.displayLocation(t,n)}),(e=>{let t="Unable to retrieve your location";switch(e.code){case e.PERMISSION_DENIED:t="You denied the request for geolocation";break;case e.POSITION_UNAVAILABLE:t="Location information is unavailable";break;case e.TIMEOUT:t="The request to get your location timed out"}this.view.showLocationError(t)}),{enableHighAccuracy:!0,timeout:5e3,maximumAge:0}):this.view.showLocationError("Geolocation is not supported by your browser")}initInteractiveMap({latInput:e,lonInput:t,useLocationBtn:n,mapContainerId:o}){const i=ee(o);let r=null;const a=new L.Icon({iconUrl:"https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-blue.png",iconSize:[25,41],iconAnchor:[12,41],popupAnchor:[1,-34],shadowSize:[41,41]});i.on("click",(n=>{const{lat:o,lng:s}=n.latlng;e.value=o.toFixed(6),t.value=s.toFixed(6),r?r.setLatLng([o,s]):r=L.marker([o,s],{icon:a}).addTo(i).bindPopup(`Coordinates:<br>Lat: ${o}<br>Lon: ${s}`).openPopup()})),n.addEventListener("click",(()=>{navigator.geolocation.getCurrentPosition((({coords:n})=>{const{latitude:o,longitude:a}=n;e.value=o.toFixed(6),t.value=a.toFixed(6),i.setView([o,a],13),r?r.setLatLng([o,a]):r=L.marker([o,a]).addTo(i)}),(e=>{alert("Gagal mendapatkan lokasi: "+e.message)}))}))}renderMapStories(e){te(mapInstance,e)}}class re{#s;#c=!1;#l=640;#d=0;#u;#h;#m;#g;static addNewStream(e){Array.isArray(window.currentStreams)?window.currentStreams=[...window.currentStreams,e]:window.currentStreams=[e]}static stopAllStreams(){Array.isArray(window.currentStreams)?window.currentStreams.forEach((e=>{e.active&&e.getTracks().forEach((e=>e.stop()))})):window.currentStreams=[]}constructor({video:e,cameraSelect:t,canvas:n,options:o={}}){this.#u=e,this.#h=t,this.#m=n,this.#p()}#p(){this.#u.oncanplay=()=>{this.#c||(this.#d=this.#u.videoHeight*this.#l/this.#u.videoWidth,this.#m.setAttribute("width",this.#l),this.#m.setAttribute("height",this.#d),this.#c=!0)},this.#h.onchange=async()=>{await this.stop(),await this.launch()}}async#v(e){try{if(!(e instanceof MediaStream))return Promise.reject(Error("MediaStream not found!"));const{deviceId:t}=e.getVideoTracks()[0].getSettings(),n=(await navigator.mediaDevices.enumerateDevices()).filter((e=>"videoinput"===e.kind)).reduce(((e,n,o)=>e.concat(`\n<option\nvalue="${n.deviceId}"\n${t===n.deviceId?"selected":""}\n>\n${n.label||`Camera ${o+1}`}\n</option>\n`)),"");this.#h.innerHTML=n}catch(e){console.error("#populateDeviceList: error:",e)}}async#y(){try{const e=this.#c||this.#h.value?{exact:this.#h.value}:void 0,t=await navigator.mediaDevices.getUserMedia({video:{aspectRatio:4/3,deviceId:e}});return await this.#v(t),t}catch(e){return console.error("#getStream: error:",e),null}}async launch(){this.#s=await this.#y(),re.addNewStream(this.#s),this.#u.srcObject=this.#s,this.#u.play(),this.#f()}stop(){this.#u&&(this.#u.srcObject=null,this.#c=!1),this.#s instanceof MediaStream&&this.#s.getTracks().forEach((e=>{e.stop()})),this.#f()}#f(){const e=this.#m.getContext("2d");e.fillStyle="#AAAAAA",e.fillRect(0,0,this.#m.width,this.#m.height)}async takePicture(){if(!this.#l||!this.#d)return null;const e=this.#m.getContext("2d");return this.#m.width=this.#l,this.#m.height=this.#d,e.drawImage(this.#u,0,0,this.#l,this.#d),await new Promise((e=>{this.#m.toBlob((t=>e(t)))}))}addCheeseButtonListener(e,t){this.#g=document.querySelector(e),this.#g.onclick=t}}class ae{#o=null;async render(){return'\n            <section class="create-story-page">\n                <h2>Add New Story</h2>\n                <div class="story-form-container">\n                    <form id="create-story-form" class="create-story-form">\n                        <div class="input-group">\n                            <label for="description-input" class="form-label">Description</label>\n                            <textarea\n                                id="description-input"\n                                name="description"\n                                class="form-input"\n                                placeholder="Enter story description"\n                                rows="4"\n                                required\n                            ></textarea>\n                        </div>\n\n                        <div class="input-group">\n                            <label for="photo-input" class="form-label">Photo</label>\n                            <input\n                                type="file"\n                                id="photo-input"\n                                name="photo"\n                                class="form-input"\n                                accept="image/*"\n                                required\n                            />\n                            <small class="input-help">Maximum file size: 1MB</small>\n                        </div>\n\n                        <div class="input-group">\n                            <label class="form-label">Or Take a Photo</label>\n                            <div class="camera-container">\n                                <video id="video" autoplay playsinline style="max-width: 100%;"></video>\n                                <canvas id="canvas" style="display: none;"></canvas>\n                                <div>\n                                    <select id="cameraSelect"></select>\n                                    <button type="button" id="takePicture">📸 Ambil Gambar</button>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class="input-group">\n                            <label class="form-label">Location (Optional)</label>\n                            <div class="location-inputs">\n                                <div class="input-group">\n                                    <label for="lat-input" class="form-label">Latitude</label>\n                                    <input\n                                        type="number"\n                                        id="lat-input"\n                                        name="lat"\n                                        class="form-input"\n                                        placeholder="e.g. -6.2088"\n                                        step="any"\n                                    />\n                                </div>\n                                <div class="input-group">\n                                    <label for="lon-input" class="form-label">Longitude</label>\n                                    <input\n                                        type="number"\n                                        id="lon-input"\n                                        name="lon"\n                                        class="form-input"\n                                        placeholder="e.g. 106.8456"\n                                        step="any"\n                                    />\n                                </div>\n                            </div>\n\n                            <button type="button" id="use-current-location" class="btn-secondary">\n                                Use My Current Location\n                            </button>\n\n                            <div class="map-container-form" style="margin-top: 1rem;">\n                                <div id="map-on-form" style="height: 300px;"></div>\n                            </div>\n                        </div>\n\n                        <div class="form-actions">\n                            <div id="submit-button-container">\n                                <button type="submit" class="btn-primary">Add Story</button>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </section>\n        '}async afterRender(){this.#o=new ie({view:this,model:i}),this.#i(),this.#w();const e=new re({video:document.getElementById("video"),cameraSelect:document.getElementById("cameraSelect"),canvas:document.getElementById("canvas")});e.launch(),e.addCheeseButtonListener("#takePicture",(async()=>{const t=await e.takePicture();if(!t)return void alert("Gagal mengambil gambar!");const n=new File([t],"photo.jpg",{type:"image/jpeg"}),o=new DataTransfer;o.items.add(n),document.getElementById("photo-input").files=o.files}));const t=document.getElementById("lat-input"),n=document.getElementById("lon-input"),o=document.getElementById("use-current-location");this.#o.initInteractiveMap({latInput:t,lonInput:n,useLocationBtn:o,mapContainerId:"map-on-form"})}#i(){document.getElementById("create-story-form").addEventListener("submit",(async e=>{e.preventDefault();const t=new FormData;t.append("description",document.getElementById("description-input").value);const n=document.getElementById("photo-input");n.files&&n.files[0]&&t.append("photo",n.files[0]);const o=document.getElementById("lat-input").value,i=document.getElementById("lon-input").value;o&&i&&(t.append("lat",o),t.append("lon",i)),this.showSubmitLoadingButton(),await this.#o.createStory(t)}))}#w(){document.getElementById("use-current-location").addEventListener("click",(()=>{this.#o.getCurrentLocation()}))}showCreateSuccess(e){alert(e),location.hash="/"}showCreateFailed(e){alert(e),this.hideSubmitLoadingButton()}showSubmitLoadingButton(){document.getElementById("submit-button-container").innerHTML='\n            <button type="submit" class="btn-primary btn-loading" disabled>\n                <span class="spinner"></span>\n                Submitting...\n            </button>\n        '}hideSubmitLoadingButton(){document.getElementById("submit-button-container").innerHTML='\n            <button type="submit" class="btn-primary">Add Story</button>\n        '}displayLocation(e,t){document.getElementById("lat-input").value=e,document.getElementById("lon-input").value=t}showLocationError(e){alert(e)}}class se{constructor({view:e,model:t}){this.view=e,this.model=t,this.story=null,this.isFavorite=!1}formatDate(e){try{const t=new Date(e);return isNaN(t.getTime())?e:t.toLocaleString("en-US",{year:"numeric",month:"short",day:"numeric",hour:"2-digit",minute:"2-digit"})}catch(t){return e}}async loadStory(e){try{const t=await this.model.getStoryById(e);0==t.error?(this.story={...t.story,formattedDate:this.formatDate(t.story.createdAt)},this.view.showStory(this.story)):this.view.showError(t.message||"Story not found")}catch(e){console.error("Failed to load story:",e),this.view.showError("Failed to load the story. Please try again later.")}}async checkFavoriteStatus(e){try{const t=await this.model.checkIsFavorite(e);t.ok&&(this.isFavorite=t.data,this.view.updateFavoriteButton(this.isFavorite))}catch(e){console.error("Failed to check favorite status:",e)}}async toggleFavorite(){if(this.story)try{let e;this.isFavorite?(e=await this.model.removeFromFavorites(this.story.id),e.ok&&(this.isFavorite=!1)):(e=await this.model.addToFavorites(this.story),e.ok&&(this.isFavorite=!0)),this.view.updateFavoriteButton(this.isFavorite),e.ok||console.error("Failed to update favorite status:",e.message)}catch(e){console.error("Failed to toggle favorite status:",e)}}initializeMap(e){const t=parseFloat(e.lat),n=parseFloat(e.lon);isNaN(t)||isNaN(n)||t<-90||t>90||n<-180||n>180?document.getElementById("story-map-container").style.display="none":te(ee("story-map-container",[t,n],13),[{...e,description:`\n                <strong>${e.name}</strong><br>\n                ${e.description}<br>\n                <strong>Created:</strong> ${e.formattedDate||this.formatDate(e.createdAt)}\n            `}])}}class ce{#o=null;constructor(){this.storyId=r(a()).id}async render(){return'\n            <section class="story-detail">\n                <div id="story-container">\n                    <div class="loading">Loading story details...</div>\n                </div>\n                <div id="story-map-container" style="height: 400px; margin: 20px 0; z-index:1;"></div>\n                <div class="story-actions">\n                    <button id="back-button" class="btn">Back to Stories</button>\n                    <button id="favorite-button" class="btn">\n                        <span id="favorite-icon">🤍</span> Add to Favorites\n                    </button>\n                </div>\n            </section>\n        '}async afterRender(){this.#o=new se({view:this,model:i}),this.storyId?(document.getElementById("back-button").addEventListener("click",(()=>{window.history.back()})),document.getElementById("favorite-button").addEventListener("click",(()=>{this.#o.toggleFavorite()})),await this.#o.loadStory(this.storyId),await this.#o.checkFavoriteStatus(this.storyId)):this.showError("Story ID not found")}showStory(e){document.getElementById("story-container").innerHTML=`\n            <div class="story-header">\n                <h2>${e.name}</h2>\n                <p class="story-metadata">\n                    By ${e.name||"Anonymous"} on ${e.formattedDate}\n                </p>\n            </div>\n            <div class="story-content">\n                <div class="story-description">${e.description}</div>\n                ${e.photoUrl?`<img src="${e.photoUrl}" alt="${e.name}" class="story-image">`:""}\n            </div>\n        `,e.lat&&e.lon?this.#o.initializeMap(e):document.getElementById("story-map-container").style.display="none"}showError(e){document.getElementById("story-container").innerHTML=`\n            <div class="error-message">\n                <p>${e}</p>\n                <button id="error-back-button" class="btn">Back to Stories</button>\n            </div>\n        `,document.getElementById("error-back-button").addEventListener("click",(()=>{window.history.back()})),document.getElementById("story-map-container").style.display="none",document.querySelector(".story-actions").style.display="none"}updateFavoriteButton(e){const t=document.getElementById("favorite-button"),n=document.getElementById("favorite-icon");e?(n.textContent="❤️",t.textContent=" Remove from Favorites",t.appendChild(n)):(n.textContent="🤍",t.textContent=" Add to Favorites",t.appendChild(n))}}class le{#e=null;#t=null;constructor({view:e,model:t}){this.#e=e,this.#t=t}async loadFavorites(){try{this.#e.showLoading();const e=await this.#t.getFavorites();if(!e.ok)return void this.#e.showError(e.message||"Failed to load favorites");const t=(e.data||[]).map((e=>this._formatStoryData(e)));this.#e.updateFavoritesList(t)}catch(e){console.error("Error loading favorites:",e),this.#e.showError("An unexpected error occurred while loading favorites")}}async removeFromFavorites(e){try{const t=await this.#t.removeFromFavorites(e);if(!t.ok)return void console.error("Failed to remove from favorites:",t.message);await this.loadFavorites()}catch(e){console.error("Error removing favorite:",e)}}_formatStoryData(e){return{...e,formattedDate:e.createdAt?this._formatDate(e.createdAt):"No date available",location:e.location||(e.lat&&e.lon?`${e.lat}, ${e.lon}`:"No location")}}_formatDate(e){try{const t={year:"numeric",month:"long",day:"numeric"};return new Date(e).toLocaleDateString(void 0,t)}catch(t){return console.error("Error formatting date:",t),e}}}class de{#o=null;constructor(){this.favorites=[],this.isLoading=!0}async render(){return'\n            <section class="favorites-page">\n                <div class="favorites-header">\n                    <h2>Your Favorite Stories</h2>\n                    <p class="favorites-description">Stories you\'ve saved for later.</p>\n                </div>\n\n                <div id="favorites-container">\n                    <div class="favorites-loading">Loading your favorites...</div>\n                </div>\n            </section>\n        '}async afterRender(){this.#o=new le({view:this,model:i}),await this.#o.loadFavorites()}showFavorites(e){const t=document.getElementById("favorites-container");this.isLoading=!1,0!==e.length?(t.innerHTML=`\n            <div id="favorites-list" class="favorites-grid">\n                ${e.map((e=>this._getStoryCardTemplate(e))).join("")}\n            </div>\n        `,document.querySelectorAll(".story-card").forEach((e=>{e.addEventListener("click",(e=>{const t=e.currentTarget.dataset.id;window.location.href=`#/detail-story/${t}`}))})),document.querySelectorAll(".remove-favorite-btn").forEach((e=>{e.addEventListener("click",(async e=>{e.stopPropagation();const t=e.currentTarget.dataset.id;await this.#o.removeFromFavorites(t)}))}))):t.innerHTML=this._getEmptyFavoritesTemplate()}updateFavoritesList(e){this.favorites=e,this.showFavorites(e)}showLoading(){document.getElementById("favorites-container").innerHTML='<div class="favorites-loading">Loading your favorites...</div>',this.isLoading=!0}showError(e){document.getElementById("favorites-container").innerHTML=`\n            <div class="error-message">\n                <p>${e}</p>\n                <button id="retry-button" class="btn-primary">Retry</button>\n            </div>\n        `,document.getElementById("retry-button").addEventListener("click",(()=>{this.showLoading(),this.#o.loadFavorites()}))}_getEmptyFavoritesTemplate(){return'\n            <div class="empty-favorites">\n                <div class="empty-icon">❤️</div>\n                <h3>No Favorites Yet</h3>\n                <p>Stories you mark as favorites will appear here.</p>\n                <a href="#/" class="btn-primary">Browse Stories</a>\n            </div>\n        '}_getStoryCardTemplate(e){return`\n            <div class="story-card" data-id="${e.id}">\n                <div class="story-thumbnail">\n                    <img src="${e.photoUrl||"/images/default-story.jpg"}" alt="${e.name}">\n                </div>\n                <div class="story-card-content">\n                    <h3 class="story-title">${e.name}</h3>\n                    <p class="story-date">${e.formattedDate||"No date"}</p>\n                    <p class="story-excerpt">${e.description||"No description available"}</p>\n                </div>\n                <div class="story-card-footer favorite-footer">\n                    <span class="story-location">${e.location||"No location"}</span>\n                    <button class="remove-favorite-btn" data-id="${e.id}">\n                        <span class="favorite-icon">❌</span> Remove\n                    </button>\n                </div>\n            </div>\n        `}}const ue={"/signup":()=>g(new W),"/signin":()=>g(new Y),"/":()=>p(new oe),"/create-story":()=>p(new ae),"/detail-story/:id":()=>p(new ce),"/favorites":()=>p(new de)};class he{constructor({mainContainer:e,menuToggle:t,sideNavigation:n,accessibilitySkipLink:o,footer:i}){this.mainContainer=e,this.menuToggle=t,this.sideNavigation=n,this.accessibilitySkipLink=o,this.footer=i,this.initialize()}initialize(){var e,t;e=this.accessibilitySkipLink,t=this.mainContainer,e.addEventListener("click",(()=>t.focus())),this.initializeNavigation(),window.addEventListener("hashchange",(()=>this.loadPage())),window.addEventListener("DOMContentLoaded",(()=>this.loadPage()))}initializeNavigation(){this.menuToggle.addEventListener("click",(()=>{this.sideNavigation.classList.toggle("menu-visible"),this.updateLayoutForNavigation()})),document.addEventListener("click",(e=>{const t=!this.sideNavigation.contains(e.target),n=!this.menuToggle.contains(e.target);t&&n&&(this.sideNavigation.classList.remove("menu-visible"),this.updateLayoutForNavigation());const o=e.target.closest('a[href^="#"]');o&&this.sideNavigation.contains(o)&&(this.sideNavigation.classList.remove("menu-visible"),this.updateLayoutForNavigation())}))}updateLayoutForNavigation(){const e=this.sideNavigation.classList.contains("menu-visible");window.innerWidth<=768&&(e?(this.mainContainer.style.marginLeft="250px",this.footer&&(this.footer.style.marginLeft="250px")):(this.mainContainer.style.marginLeft="0",this.footer&&(this.footer.style.marginLeft="0")))}updateNavigationMenu(){const e=!!d(),t=s(),n="/signin"===t||"/signup"===t,o=this.sideNavigation.querySelector(".primary-nav"),i=this.sideNavigation.querySelector(".secondary-nav");if(!e&&n)return this.menuToggle.style.display="none",this.sideNavigation.style.display="none",this.mainContainer.style.marginLeft="0",this.mainContainer.style.width="100%",this.footer&&(this.footer.style.marginLeft="0",this.footer.style.width="100%"),o.innerHTML="",void(i.innerHTML="");if(this.menuToggle.style.display="",this.sideNavigation.style.display="",this.mainContainer.style.marginLeft="",this.mainContainer.style.width="",this.mainContainer.style.display="block",this.mainContainer.style.padding="",this.mainContainer.style.minHeight="",this.mainContainer.style.alignItems="",this.footer&&(this.footer.style.marginLeft="",this.footer.style.width=""),e){o.innerHTML='\n    <a href="#/" class="nav-item">\n      <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">\n        <path d="M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z"></path>\n        <polyline points="9 22 9 12 15 12 15 22"></polyline>\n      </svg>\n      Home\n    </a>\n    <a href="#/" class="nav-item">\n      <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">\n        <circle cx="11" cy="11" r="8"></circle>\n        <line x1="21" y1="21" x2="16.65" y2="16.65"></line>\n      </svg>\n      Explore Stories\n    </a>\n    <a href="#/create-story" class="nav-item">\n      <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">\n        <path d="M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7"></path>\n        <path d="M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z"></path>\n      </svg>\n      Write New Story\n    </a>\n    <a href="#/favorites" class="nav-item">\n      <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">\n        <path d="M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z" />\n      </svg>\n      Favorites\n    </a>\n  ',i.innerHTML='\n    <a href="#/" class="nav-item">\n      <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">\n        <path d="M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"></path>\n        <circle cx="12" cy="7" r="4"></circle>\n      </svg>\n      My Profile\n    </a>\n    <a href="#/" class="nav-item">\n      <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">\n        <circle cx="12" cy="12" r="3"></circle>\n        <path d="M19.4 15a1.65 1.65 0 0 0 .33 1.82l.06.06a2 2 0 0 1 0 2.83 2 2 0 0 1-2.83 0l-.06-.06a1.65 1.65 0 0 0-1.82-.33 1.65 1.65 0 0 0-1 1.51V21a2 2 0 0 1-2 2 2 2 0 0 1-2-2v-.09A1.65 1.65 0 0 0 9 19.4a1.65 1.65 0 0 0-1.82.33l-.06.06a2 2 0 0 1-2.83 0 2 2 0 0 1 0-2.83l.06-.06a1.65 1.65 0 0 0 .33-1.82 1.65 1.65 0 0 0-1.51-1H3a2 2 0 0 1-2-2 2 2 0 0 1 2-2h.09A1.65 1.65 0 0 0 4.6 9a1.65 1.65 0 0 0-.33-1.82l-.06-.06a2 2 0 0 1 0-2.83 2 2 0 0 1 2.83 0l.06.06a1.65 1.65 0 0 0 1.82.33H9a1.65 1.65 0 0 0 1-1.51V3a2 2 0 0 1 2-2 2 2 0 0 1 2 2v.09a1.65 1.65 0 0 0 1 1.51 1.65 1.65 0 0 0 1.82-.33l.06-.06a2 2 0 0 1 2.83 0 2 2 0 0 1 0 2.83l-.06.06a1.65 1.65 0 0 0-.33 1.82V9a1.65 1.65 0 0 0 1.51 1H21a2 2 0 0 1 2 2 2 2 0 0 1-2 2h-.09a1.65 1.65 0 0 0-1.51 1z"></path>\n      </svg>\n      Settings\n    </a>\n    <button id="logout-btn" class="nav-item">\n      <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">\n        <path d="M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4"></path>\n        <polyline points="16 17 21 12 16 7"></polyline>\n        <line x1="21" y1="12" x2="9" y2="12"></line>\n      </svg>\n      Sign Out\n    </button>\n  ';const e=document.getElementById("logout-btn");e&&e.addEventListener("click",(e=>{e.preventDefault(),window.confirm("Are you sure you want to sign out from Distory?")&&(v(),window.location.hash="/signin")}))}else o.innerHTML="",i.innerHTML='\n    <a href="#/signin" class="nav-item">\n      <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">\n        <path d="M15 3h4a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2h-4"></path>\n        <polyline points="10 17 15 12 10 7"></polyline>\n        <line x1="15" y1="12" x2="3" y2="12"></line>\n      </svg>\n      Sign In\n    </a>\n    <a href="#/signup" class="nav-item">\n      <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">\n        <path d="M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"></path>\n        <circle cx="8.5" cy="7" r="4"></circle>\n        <line x1="20" y1="8" x2="20" y2="14"></line>\n        <line x1="23" y1="11" x2="17" y2="11"></line>\n      </svg>\n      Create Account\n    </a>\n  '}async loadPage(){re.stopAllStreams();const e=s(),t=(0,ue[e])(),n=await t.render();if(document.startViewTransition)document.startViewTransition((async()=>{this.mainContainer.innerHTML=n,this.updateNavigationMenu(),"function"==typeof t.afterRender&&await t.afterRender()})).finished.then((()=>{window.scrollTo({top:0,behavior:"instant"}),this.updatePageTitle(e);const t="/signin"===e||"/signup"===e;!d()&&t&&this.centerAuthForm();const n=document.querySelector("h1, h2")?.textContent||e;this.announcePageChange(n)})).catch(console.error);else{this.mainContainer.innerHTML=n,this.updateNavigationMenu(),"function"==typeof t.afterRender&&await t.afterRender(),window.scrollTo({top:0,behavior:"instant"}),this.updatePageTitle(e);const o="/signin"===e||"/signup"===e;!d()&&o&&this.centerAuthForm();const i=document.querySelector("h1, h2")?.textContent||e;this.announcePageChange(i)}}centerAuthForm(){const e=this.mainContainer.querySelector("form")||this.mainContainer.querySelector(".auth-container")||this.mainContainer.querySelector(".form-container");e&&(this.mainContainer.style.display="flex",this.mainContainer.style.justifyContent="center",this.mainContainer.style.alignItems="center",this.mainContainer.style.minHeight="100vh",this.mainContainer.style.padding="0 20px",e.style.maxWidth="450px",e.style.width="100%",this.footer&&(this.footer.style.display="none"))}updatePageTitle(e){let t;switch(e){case"/":t="Distory - Share Your Stories";break;case"/signin":t="Sign In | Distory";break;case"/signup":t="Join Distory | Create Account";break;case"/create-story":t="Write New Story | Distory";break;case"/my-stories":t="My Stories | Distory";break;case"/profile":t="My Profile | Distory";break;default:t=e.startsWith("/story/")?"Reading Story | Distory":"Distory"}document.title=t}announcePageChange(e){const t=document.createElement("div");t.setAttribute("aria-live","polite"),t.setAttribute("role","status"),t.classList.add("sr-only"),t.textContent=`Navigated to ${e} page`,document.body.appendChild(t),setTimeout((()=>{document.body.removeChild(t)}),3e3)}showErrorMessage(e){const t=document.createElement("div");t.classList.add("error-notification"),t.textContent=e,this.mainContainer.prepend(t),setTimeout((()=>{t.remove()}),5e3)}}document.addEventListener("DOMContentLoaded",(async()=>{console.log("Distory application initializing...");const e=new he({mainContainer:document.getElementById("main-content"),menuToggle:document.getElementById("menu-toggle"),sideNavigation:document.getElementById("side-navigation"),accessibilitySkipLink:document.querySelector(".skip-link"),footer:document.querySelector("footer")});await e.loadPage(),await(async()=>{if("serviceWorker"in navigator)try{const e=await navigator.serviceWorker.register("/sw.js");console.log("Service worker registered successfully:",e),e.addEventListener("updatefound",(()=>{const t=e.installing;console.log("Service worker update found!"),t.addEventListener("statechange",(()=>{"installed"===t.state&&navigator.serviceWorker.controller&&(console.log("New service worker installed, but waiting."),confirm("New version available! Update now?")&&(t.postMessage({type:"SKIP_WAITING"}),window.location.reload()))}))}));let t=!1;return navigator.serviceWorker.addEventListener("controllerchange",(()=>{t||(t=!0,window.location.reload())})),e}catch(e){console.error("Service worker registration failed:",e)}else console.log("Service workers are not supported in this browser.")})(),window.addEventListener("hashchange",(async()=>{await e.loadPage()}))}))}},e=>{e.O(0,[96],(()=>e(e.s=949))),e.O()}]);