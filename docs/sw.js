(()=>{"use strict";var e={136:()=>{try{self["workbox:core:7.2.0"]&&_()}catch(e){}},227:()=>{try{self["workbox:routing:7.2.0"]&&_()}catch(e){}},390:()=>{try{self["workbox:strategies:7.2.0"]&&_()}catch(e){}},447:()=>{try{self["workbox:precaching:7.2.0"]&&_()}catch(e){}},535:()=>{try{self["workbox:cacheable-response:7.2.0"]&&_()}catch(e){}},626:()=>{try{self["workbox:expiration:7.2.0"]&&_()}catch(e){}}},t={};function s(n){var a=t[n];if(void 0!==a)return a.exports;var i=t[n]={exports:{}};return e[n](i,i.exports,s),i.exports}s(136);class n extends Error{constructor(e,t){super(((e,...t)=>{let s=e;return t.length>0&&(s+=` :: ${JSON.stringify(t)}`),s})(e,t)),this.name=e,this.details=t}}const a={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},i=e=>[a.prefix,e,a.suffix].filter((e=>e&&e.length>0)).join("-"),r=e=>e||i(a.precache),o=e=>e||i(a.runtime);function c(e,t){const s=t();return e.waitUntil(s),s}function h(e){if(!e)throw new n("add-to-cache-list-unexpected-type",{entry:e});if("string"==typeof e){const t=new URL(e,location.href);return{cacheKey:t.href,url:t.href}}const{revision:t,url:s}=e;if(!s)throw new n("add-to-cache-list-unexpected-type",{entry:e});if(!t){const e=new URL(s,location.href);return{cacheKey:e.href,url:e.href}}const a=new URL(s,location.href),i=new URL(s,location.href);return a.searchParams.set("__WB_REVISION__",t),{cacheKey:a.href,url:i.href}}s(447);class l{constructor(){this.updatedURLs=[],this.notUpdatedURLs=[],this.handlerWillStart=async({request:e,state:t})=>{t&&(t.originalRequest=e)},this.cachedResponseWillBeUsed=async({event:e,state:t,cachedResponse:s})=>{if("install"===e.type&&t&&t.originalRequest&&t.originalRequest instanceof Request){const e=t.originalRequest.url;s?this.notUpdatedURLs.push(e):this.updatedURLs.push(e)}return s}}}class u{constructor({precacheController:e}){this.cacheKeyWillBeUsed=async({request:e,params:t})=>{const s=(null==t?void 0:t.cacheKey)||this._precacheController.getCacheKeyForURL(e.url);return s?new Request(s,{headers:e.headers}):e},this._precacheController=e}}let d;function p(e,t){const s=new URL(e);for(const e of t)s.searchParams.delete(e);return s.href}class f{constructor(){this.promise=new Promise(((e,t)=>{this.resolve=e,this.reject=t}))}}const g=new Set;function m(e){return"string"==typeof e?new Request(e):e}s(390);class w{constructor(e,t){this._cacheKeys={},Object.assign(this,t),this.event=t.event,this._strategy=e,this._handlerDeferred=new f,this._extendLifetimePromises=[],this._plugins=[...e.plugins],this._pluginStateMap=new Map;for(const e of this._plugins)this._pluginStateMap.set(e,{});this.event.waitUntil(this._handlerDeferred.promise)}async fetch(e){const{event:t}=this;let s=m(e);if("navigate"===s.mode&&t instanceof FetchEvent&&t.preloadResponse){const e=await t.preloadResponse;if(e)return e}const a=this.hasCallback("fetchDidFail")?s.clone():null;try{for(const e of this.iterateCallbacks("requestWillFetch"))s=await e({request:s.clone(),event:t})}catch(e){if(e instanceof Error)throw new n("plugin-error-request-will-fetch",{thrownErrorMessage:e.message})}const i=s.clone();try{let e;e=await fetch(s,"navigate"===s.mode?void 0:this._strategy.fetchOptions);for(const s of this.iterateCallbacks("fetchDidSucceed"))e=await s({event:t,request:i,response:e});return e}catch(e){throw a&&await this.runCallbacks("fetchDidFail",{error:e,event:t,originalRequest:a.clone(),request:i.clone()}),e}}async fetchAndCachePut(e){const t=await this.fetch(e),s=t.clone();return this.waitUntil(this.cachePut(e,s)),t}async cacheMatch(e){const t=m(e);let s;const{cacheName:n,matchOptions:a}=this._strategy,i=await this.getCacheKey(t,"read"),r=Object.assign(Object.assign({},a),{cacheName:n});s=await caches.match(i,r);for(const e of this.iterateCallbacks("cachedResponseWillBeUsed"))s=await e({cacheName:n,matchOptions:a,cachedResponse:s,request:i,event:this.event})||void 0;return s}async cachePut(e,t){const s=m(e);var a;await(a=0,new Promise((e=>setTimeout(e,a))));const i=await this.getCacheKey(s,"write");if(!t)throw new n("cache-put-with-no-response",{url:(r=i.url,new URL(String(r),location.href).href.replace(new RegExp(`^${location.origin}`),""))});var r;const o=await this._ensureResponseSafeToCache(t);if(!o)return!1;const{cacheName:c,matchOptions:h}=this._strategy,l=await self.caches.open(c),u=this.hasCallback("cacheDidUpdate"),d=u?await async function(e,t,s,n){const a=p(t.url,s);if(t.url===a)return e.match(t,n);const i=Object.assign(Object.assign({},n),{ignoreSearch:!0}),r=await e.keys(t,i);for(const t of r)if(a===p(t.url,s))return e.match(t,n)}(l,i.clone(),["__WB_REVISION__"],h):null;try{await l.put(i,u?o.clone():o)}catch(e){if(e instanceof Error)throw"QuotaExceededError"===e.name&&await async function(){for(const e of g)await e()}(),e}for(const e of this.iterateCallbacks("cacheDidUpdate"))await e({cacheName:c,oldResponse:d,newResponse:o.clone(),request:i,event:this.event});return!0}async getCacheKey(e,t){const s=`${e.url} | ${t}`;if(!this._cacheKeys[s]){let n=e;for(const e of this.iterateCallbacks("cacheKeyWillBeUsed"))n=m(await e({mode:t,request:n,event:this.event,params:this.params}));this._cacheKeys[s]=n}return this._cacheKeys[s]}hasCallback(e){for(const t of this._strategy.plugins)if(e in t)return!0;return!1}async runCallbacks(e,t){for(const s of this.iterateCallbacks(e))await s(t)}*iterateCallbacks(e){for(const t of this._strategy.plugins)if("function"==typeof t[e]){const s=this._pluginStateMap.get(t),n=n=>{const a=Object.assign(Object.assign({},n),{state:s});return t[e](a)};yield n}}waitUntil(e){return this._extendLifetimePromises.push(e),e}async doneWaiting(){let e;for(;e=this._extendLifetimePromises.shift();)await e}destroy(){this._handlerDeferred.resolve(null)}async _ensureResponseSafeToCache(e){let t=e,s=!1;for(const e of this.iterateCallbacks("cacheWillUpdate"))if(t=await e({request:this.request,response:t,event:this.event})||void 0,s=!0,!t)break;return s||t&&200!==t.status&&(t=void 0),t}}class y{constructor(e={}){this.cacheName=o(e.cacheName),this.plugins=e.plugins||[],this.fetchOptions=e.fetchOptions,this.matchOptions=e.matchOptions}handle(e){const[t]=this.handleAll(e);return t}handleAll(e){e instanceof FetchEvent&&(e={event:e,request:e.request});const t=e.event,s="string"==typeof e.request?new Request(e.request):e.request,n="params"in e?e.params:void 0,a=new w(this,{event:t,request:s,params:n}),i=this._getResponse(a,s,t);return[i,this._awaitComplete(i,a,s,t)]}async _getResponse(e,t,s){let a;await e.runCallbacks("handlerWillStart",{event:s,request:t});try{if(a=await this._handle(t,e),!a||"error"===a.type)throw new n("no-response",{url:t.url})}catch(n){if(n instanceof Error)for(const i of e.iterateCallbacks("handlerDidError"))if(a=await i({error:n,event:s,request:t}),a)break;if(!a)throw n}for(const n of e.iterateCallbacks("handlerWillRespond"))a=await n({event:s,request:t,response:a});return a}async _awaitComplete(e,t,s,n){let a,i;try{a=await e}catch(i){}try{await t.runCallbacks("handlerDidRespond",{event:n,request:s,response:a}),await t.doneWaiting()}catch(e){e instanceof Error&&(i=e)}if(await t.runCallbacks("handlerDidComplete",{event:n,request:s,response:a,error:i}),t.destroy(),i)throw i}}class v extends y{constructor(e={}){e.cacheName=r(e.cacheName),super(e),this._fallbackToNetwork=!1!==e.fallbackToNetwork,this.plugins.push(v.copyRedirectedCacheableResponsesPlugin)}async _handle(e,t){return await t.cacheMatch(e)||(t.event&&"install"===t.event.type?await this._handleInstall(e,t):await this._handleFetch(e,t))}async _handleFetch(e,t){let s;const a=t.params||{};if(!this._fallbackToNetwork)throw new n("missing-precache-entry",{cacheName:this.cacheName,url:e.url});{const n=a.integrity,i=e.integrity,r=!i||i===n;s=await t.fetch(new Request(e,{integrity:"no-cors"!==e.mode?i||n:void 0})),n&&r&&"no-cors"!==e.mode&&(this._useDefaultCacheabilityPluginIfNeeded(),await t.cachePut(e,s.clone()))}return s}async _handleInstall(e,t){this._useDefaultCacheabilityPluginIfNeeded();const s=await t.fetch(e);if(!await t.cachePut(e,s.clone()))throw new n("bad-precaching-response",{url:e.url,status:s.status});return s}_useDefaultCacheabilityPluginIfNeeded(){let e=null,t=0;for(const[s,n]of this.plugins.entries())n!==v.copyRedirectedCacheableResponsesPlugin&&(n===v.defaultPrecacheCacheabilityPlugin&&(e=s),n.cacheWillUpdate&&t++);0===t?this.plugins.push(v.defaultPrecacheCacheabilityPlugin):t>1&&null!==e&&this.plugins.splice(e,1)}}v.defaultPrecacheCacheabilityPlugin={cacheWillUpdate:async({response:e})=>!e||e.status>=400?null:e},v.copyRedirectedCacheableResponsesPlugin={cacheWillUpdate:async({response:e})=>e.redirected?await async function(e,t){let s=null;if(e.url&&(s=new URL(e.url).origin),s!==self.location.origin)throw new n("cross-origin-copy-response",{origin:s});const a=e.clone(),i={headers:new Headers(a.headers),status:a.status,statusText:a.statusText},r=t?t(i):i,o=function(){if(void 0===d){const e=new Response("");if("body"in e)try{new Response(e.body),d=!0}catch(e){d=!1}d=!1}return d}()?a.body:await a.blob();return new Response(o,r)}(e):e};class x{constructor({cacheName:e,plugins:t=[],fallbackToNetwork:s=!0}={}){this._urlsToCacheKeys=new Map,this._urlsToCacheModes=new Map,this._cacheKeysToIntegrities=new Map,this._strategy=new v({cacheName:r(e),plugins:[...t,new u({precacheController:this})],fallbackToNetwork:s}),this.install=this.install.bind(this),this.activate=this.activate.bind(this)}get strategy(){return this._strategy}precache(e){this.addToCacheList(e),this._installAndActiveListenersAdded||(self.addEventListener("install",this.install),self.addEventListener("activate",this.activate),this._installAndActiveListenersAdded=!0)}addToCacheList(e){const t=[];for(const s of e){"string"==typeof s?t.push(s):s&&void 0===s.revision&&t.push(s.url);const{cacheKey:e,url:a}=h(s),i="string"!=typeof s&&s.revision?"reload":"default";if(this._urlsToCacheKeys.has(a)&&this._urlsToCacheKeys.get(a)!==e)throw new n("add-to-cache-list-conflicting-entries",{firstEntry:this._urlsToCacheKeys.get(a),secondEntry:e});if("string"!=typeof s&&s.integrity){if(this._cacheKeysToIntegrities.has(e)&&this._cacheKeysToIntegrities.get(e)!==s.integrity)throw new n("add-to-cache-list-conflicting-integrities",{url:a});this._cacheKeysToIntegrities.set(e,s.integrity)}if(this._urlsToCacheKeys.set(a,e),this._urlsToCacheModes.set(a,i),t.length>0){const e=`Workbox is precaching URLs without revision info: ${t.join(", ")}\nThis is generally NOT safe. Learn more at https://bit.ly/wb-precache`;console.warn(e)}}}install(e){return c(e,(async()=>{const t=new l;this.strategy.plugins.push(t);for(const[t,s]of this._urlsToCacheKeys){const n=this._cacheKeysToIntegrities.get(s),a=this._urlsToCacheModes.get(t),i=new Request(t,{integrity:n,cache:a,credentials:"same-origin"});await Promise.all(this.strategy.handleAll({params:{cacheKey:s},request:i,event:e}))}const{updatedURLs:s,notUpdatedURLs:n}=t;return{updatedURLs:s,notUpdatedURLs:n}}))}activate(e){return c(e,(async()=>{const e=await self.caches.open(this.strategy.cacheName),t=await e.keys(),s=new Set(this._urlsToCacheKeys.values()),n=[];for(const a of t)s.has(a.url)||(await e.delete(a),n.push(a.url));return{deletedURLs:n}}))}getURLsToCacheKeys(){return this._urlsToCacheKeys}getCachedURLs(){return[...this._urlsToCacheKeys.keys()]}getCacheKeyForURL(e){const t=new URL(e,location.href);return this._urlsToCacheKeys.get(t.href)}getIntegrityForCacheKey(e){return this._cacheKeysToIntegrities.get(e)}async matchPrecache(e){const t=e instanceof Request?e.url:e,s=this.getCacheKeyForURL(t);if(s)return(await self.caches.open(this.strategy.cacheName)).match(s)}createHandlerBoundToURL(e){const t=this.getCacheKeyForURL(e);if(!t)throw new n("non-precached-url",{url:e});return s=>(s.request=new Request(e),s.params=Object.assign({cacheKey:t},s.params),this.strategy.handle(s))}}let b;const R=()=>(b||(b=new x),b);s(227);const C=e=>e&&"object"==typeof e?e:{handle:e};class L{constructor(e,t,s="GET"){this.handler=C(t),this.match=e,this.method=s}setCatchHandler(e){this.catchHandler=C(e)}}class q extends L{constructor(e,t,s){super((({url:t})=>{const s=e.exec(t.href);if(s&&(t.origin===location.origin||0===s.index))return s.slice(1)}),t,s)}}class E{constructor(){this._routes=new Map,this._defaultHandlerMap=new Map}get routes(){return this._routes}addFetchListener(){self.addEventListener("fetch",(e=>{const{request:t}=e,s=this.handleRequest({request:t,event:e});s&&e.respondWith(s)}))}addCacheListener(){self.addEventListener("message",(e=>{if(e.data&&"CACHE_URLS"===e.data.type){const{payload:t}=e.data,s=Promise.all(t.urlsToCache.map((t=>{"string"==typeof t&&(t=[t]);const s=new Request(...t);return this.handleRequest({request:s,event:e})})));e.waitUntil(s),e.ports&&e.ports[0]&&s.then((()=>e.ports[0].postMessage(!0)))}}))}handleRequest({request:e,event:t}){const s=new URL(e.url,location.href);if(!s.protocol.startsWith("http"))return;const n=s.origin===location.origin,{params:a,route:i}=this.findMatchingRoute({event:t,request:e,sameOrigin:n,url:s});let r=i&&i.handler;const o=e.method;if(!r&&this._defaultHandlerMap.has(o)&&(r=this._defaultHandlerMap.get(o)),!r)return;let c;try{c=r.handle({url:s,request:e,event:t,params:a})}catch(e){c=Promise.reject(e)}const h=i&&i.catchHandler;return c instanceof Promise&&(this._catchHandler||h)&&(c=c.catch((async n=>{if(h)try{return await h.handle({url:s,request:e,event:t,params:a})}catch(e){e instanceof Error&&(n=e)}if(this._catchHandler)return this._catchHandler.handle({url:s,request:e,event:t});throw n}))),c}findMatchingRoute({url:e,sameOrigin:t,request:s,event:n}){const a=this._routes.get(s.method)||[];for(const i of a){let a;const r=i.match({url:e,sameOrigin:t,request:s,event:n});if(r)return a=r,(Array.isArray(a)&&0===a.length||r.constructor===Object&&0===Object.keys(r).length||"boolean"==typeof r)&&(a=void 0),{route:i,params:a}}return{}}setDefaultHandler(e,t="GET"){this._defaultHandlerMap.set(t,C(e))}setCatchHandler(e){this._catchHandler=C(e)}registerRoute(e){this._routes.has(e.method)||this._routes.set(e.method,[]),this._routes.get(e.method).push(e)}unregisterRoute(e){if(!this._routes.has(e.method))throw new n("unregister-route-but-not-found-with-method",{method:e.method});const t=this._routes.get(e.method).indexOf(e);if(!(t>-1))throw new n("unregister-route-route-not-registered");this._routes.get(e.method).splice(t,1)}}let k;function T(e,t,s){let a;if("string"==typeof e){const n=new URL(e,location.href);a=new L((({url:e})=>e.href===n.href),t,s)}else if(e instanceof RegExp)a=new q(e,t,s);else if("function"==typeof e)a=new L(e,t,s);else{if(!(e instanceof L))throw new n("unsupported-route-type",{moduleName:"workbox-routing",funcName:"registerRoute",paramName:"capture"});a=e}return(k||(k=new E,k.addFetchListener(),k.addCacheListener()),k).registerRoute(a),a}class N extends L{constructor(e,t){super((({request:s})=>{const n=e.getURLsToCacheKeys();for(const a of function*(e,{ignoreURLParametersMatching:t=[/^utm_/,/^fbclid$/],directoryIndex:s="index.html",cleanURLs:n=!0,urlManipulation:a}={}){const i=new URL(e,location.href);i.hash="",yield i.href;const r=function(e,t=[]){for(const s of[...e.searchParams.keys()])t.some((e=>e.test(s)))&&e.searchParams.delete(s);return e}(i,t);if(yield r.href,s&&r.pathname.endsWith("/")){const e=new URL(r.href);e.pathname+=s,yield e.href}if(n){const e=new URL(r.href);e.pathname+=".html",yield e.href}if(a){const e=a({url:i});for(const t of e)yield t.href}}(s.url,t)){const t=n.get(a);if(t)return{cacheKey:t,integrity:e.getIntegrityForCacheKey(t)}}}),e.strategy)}}class U extends y{async _handle(e,t){let s,a=await t.cacheMatch(e);if(a);else try{a=await t.fetchAndCachePut(e)}catch(e){e instanceof Error&&(s=e)}if(!a)throw new n("no-response",{url:e.url,error:s});return a}}const D={cacheWillUpdate:async({response:e})=>200===e.status||0===e.status?e:null};class M extends y{constructor(e={}){super(e),this.plugins.some((e=>"cacheWillUpdate"in e))||this.plugins.unshift(D),this._networkTimeoutSeconds=e.networkTimeoutSeconds||0}async _handle(e,t){const s=[],a=[];let i;if(this._networkTimeoutSeconds){const{id:n,promise:r}=this._getTimeoutPromise({request:e,logs:s,handler:t});i=n,a.push(r)}const r=this._getNetworkPromise({timeoutId:i,request:e,logs:s,handler:t});a.push(r);const o=await t.waitUntil((async()=>await t.waitUntil(Promise.race(a))||await r)());if(!o)throw new n("no-response",{url:e.url});return o}_getTimeoutPromise({request:e,logs:t,handler:s}){let n;return{promise:new Promise((t=>{n=setTimeout((async()=>{t(await s.cacheMatch(e))}),1e3*this._networkTimeoutSeconds)})),id:n}}async _getNetworkPromise({timeoutId:e,request:t,logs:s,handler:n}){let a,i;try{i=await n.fetchAndCachePut(t)}catch(e){e instanceof Error&&(a=e)}return e&&clearTimeout(e),!a&&i||(i=await n.cacheMatch(t)),i}}class A extends y{constructor(e={}){super(e),this.plugins.some((e=>"cacheWillUpdate"in e))||this.plugins.unshift(D)}async _handle(e,t){const s=t.fetchAndCachePut(e).catch((()=>{}));t.waitUntil(s);let a,i=await t.cacheMatch(e);if(i);else try{i=await s}catch(e){e instanceof Error&&(a=e)}if(!i)throw new n("no-response",{url:e.url,error:a});return i}}function S(e){e.then((()=>{}))}let I,P;const K=new WeakMap,W=new WeakMap,O=new WeakMap,j=new WeakMap,B=new WeakMap;let F={get(e,t,s){if(e instanceof IDBTransaction){if("done"===t)return W.get(e);if("objectStoreNames"===t)return e.objectStoreNames||O.get(e);if("store"===t)return s.objectStoreNames[1]?void 0:s.objectStore(s.objectStoreNames[0])}return V(e[t])},set:(e,t,s)=>(e[t]=s,!0),has:(e,t)=>e instanceof IDBTransaction&&("done"===t||"store"===t)||t in e};function H(e){return"function"==typeof e?(t=e)!==IDBDatabase.prototype.transaction||"objectStoreNames"in IDBTransaction.prototype?(P||(P=[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey])).includes(t)?function(...e){return t.apply($(this),e),V(K.get(this))}:function(...e){return V(t.apply($(this),e))}:function(e,...s){const n=t.call($(this),e,...s);return O.set(n,e.sort?e.sort():[e]),V(n)}:(e instanceof IDBTransaction&&function(e){if(W.has(e))return;const t=new Promise(((t,s)=>{const n=()=>{e.removeEventListener("complete",a),e.removeEventListener("error",i),e.removeEventListener("abort",i)},a=()=>{t(),n()},i=()=>{s(e.error||new DOMException("AbortError","AbortError")),n()};e.addEventListener("complete",a),e.addEventListener("error",i),e.addEventListener("abort",i)}));W.set(e,t)}(e),s=e,(I||(I=[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction])).some((e=>s instanceof e))?new Proxy(e,F):e);var t,s}function V(e){if(e instanceof IDBRequest)return function(e){const t=new Promise(((t,s)=>{const n=()=>{e.removeEventListener("success",a),e.removeEventListener("error",i)},a=()=>{t(V(e.result)),n()},i=()=>{s(e.error),n()};e.addEventListener("success",a),e.addEventListener("error",i)}));return t.then((t=>{t instanceof IDBCursor&&K.set(t,e)})).catch((()=>{})),B.set(t,e),t}(e);if(j.has(e))return j.get(e);const t=H(e);return t!==e&&(j.set(e,t),B.set(t,e)),t}const $=e=>B.get(e),z=["get","getKey","getAll","getAllKeys","count"],G=["put","add","delete","clear"],Q=new Map;function Z(e,t){if(!(e instanceof IDBDatabase)||t in e||"string"!=typeof t)return;if(Q.get(t))return Q.get(t);const s=t.replace(/FromIndex$/,""),n=t!==s,a=G.includes(s);if(!(s in(n?IDBIndex:IDBObjectStore).prototype)||!a&&!z.includes(s))return;const i=async function(e,...t){const i=this.transaction(e,a?"readwrite":"readonly");let r=i.store;return n&&(r=r.index(t.shift())),(await Promise.all([r[s](...t),a&&i.done]))[0]};return Q.set(t,i),i}var J;J=F,F={...J,get:(e,t,s)=>Z(e,t)||J.get(e,t,s),has:(e,t)=>!!Z(e,t)||J.has(e,t)},s(626);const X="cache-entries",Y=e=>{const t=new URL(e,location.href);return t.hash="",t.href};class ee{constructor(e){this._db=null,this._cacheName=e}_upgradeDb(e){const t=e.createObjectStore(X,{keyPath:"id"});t.createIndex("cacheName","cacheName",{unique:!1}),t.createIndex("timestamp","timestamp",{unique:!1})}_upgradeDbAndDeleteOldDbs(e){this._upgradeDb(e),this._cacheName&&function(e,{blocked:t}={}){const s=indexedDB.deleteDatabase(e);t&&s.addEventListener("blocked",(e=>t(e.oldVersion,e))),V(s).then((()=>{}))}(this._cacheName)}async setTimestamp(e,t){const s={url:e=Y(e),timestamp:t,cacheName:this._cacheName,id:this._getId(e)},n=(await this.getDb()).transaction(X,"readwrite",{durability:"relaxed"});await n.store.put(s),await n.done}async getTimestamp(e){const t=await this.getDb(),s=await t.get(X,this._getId(e));return null==s?void 0:s.timestamp}async expireEntries(e,t){const s=await this.getDb();let n=await s.transaction(X).store.index("timestamp").openCursor(null,"prev");const a=[];let i=0;for(;n;){const s=n.value;s.cacheName===this._cacheName&&(e&&s.timestamp<e||t&&i>=t?a.push(n.value):i++),n=await n.continue()}const r=[];for(const e of a)await s.delete(X,e.id),r.push(e.url);return r}_getId(e){return this._cacheName+"|"+Y(e)}async getDb(){return this._db||(this._db=await function(e,t,{blocked:s,upgrade:n,blocking:a,terminated:i}={}){const r=indexedDB.open(e,t),o=V(r);return n&&r.addEventListener("upgradeneeded",(e=>{n(V(r.result),e.oldVersion,e.newVersion,V(r.transaction),e)})),s&&r.addEventListener("blocked",(e=>s(e.oldVersion,e.newVersion,e))),o.then((e=>{i&&e.addEventListener("close",(()=>i())),a&&e.addEventListener("versionchange",(e=>a(e.oldVersion,e.newVersion,e)))})).catch((()=>{})),o}("workbox-expiration",1,{upgrade:this._upgradeDbAndDeleteOldDbs.bind(this)})),this._db}}class te{constructor(e,t={}){this._isRunning=!1,this._rerunRequested=!1,this._maxEntries=t.maxEntries,this._maxAgeSeconds=t.maxAgeSeconds,this._matchOptions=t.matchOptions,this._cacheName=e,this._timestampModel=new ee(e)}async expireEntries(){if(this._isRunning)return void(this._rerunRequested=!0);this._isRunning=!0;const e=this._maxAgeSeconds?Date.now()-1e3*this._maxAgeSeconds:0,t=await this._timestampModel.expireEntries(e,this._maxEntries),s=await self.caches.open(this._cacheName);for(const e of t)await s.delete(e,this._matchOptions);this._isRunning=!1,this._rerunRequested&&(this._rerunRequested=!1,S(this.expireEntries()))}async updateTimestamp(e){await this._timestampModel.setTimestamp(e,Date.now())}async isURLExpired(e){if(this._maxAgeSeconds){const t=await this._timestampModel.getTimestamp(e),s=Date.now()-1e3*this._maxAgeSeconds;return void 0===t||t<s}return!1}async delete(){this._rerunRequested=!1,await this._timestampModel.expireEntries(1/0)}}class se{constructor(e={}){var t;this.cachedResponseWillBeUsed=async({event:e,request:t,cacheName:s,cachedResponse:n})=>{if(!n)return null;const a=this._isResponseDateFresh(n),i=this._getCacheExpiration(s);S(i.expireEntries());const r=i.updateTimestamp(t.url);if(e)try{e.waitUntil(r)}catch(e){}return a?n:null},this.cacheDidUpdate=async({cacheName:e,request:t})=>{const s=this._getCacheExpiration(e);await s.updateTimestamp(t.url),await s.expireEntries()},this._config=e,this._maxAgeSeconds=e.maxAgeSeconds,this._cacheExpirations=new Map,e.purgeOnQuotaError&&(t=()=>this.deleteCacheAndMetadata(),g.add(t))}_getCacheExpiration(e){if(e===o())throw new n("expire-custom-caches-only");let t=this._cacheExpirations.get(e);return t||(t=new te(e,this._config),this._cacheExpirations.set(e,t)),t}_isResponseDateFresh(e){if(!this._maxAgeSeconds)return!0;const t=this._getDateHeaderTimestamp(e);return null===t||t>=Date.now()-1e3*this._maxAgeSeconds}_getDateHeaderTimestamp(e){if(!e.headers.has("date"))return null;const t=e.headers.get("date"),s=new Date(t).getTime();return isNaN(s)?null:s}async deleteCacheAndMetadata(){for(const[e,t]of this._cacheExpirations)await self.caches.delete(e),await t.delete();this._cacheExpirations=new Map}}var ne;s(535);class ae{constructor(e={}){this._statuses=e.statuses,this._headers=e.headers}isResponseCacheable(e){let t=!0;return this._statuses&&(t=this._statuses.includes(e.status)),this._headers&&t&&(t=Object.keys(this._headers).some((t=>e.headers.get(t)===this._headers[t]))),t}}class ie{constructor(e){this.cacheWillUpdate=async({response:e})=>this._cacheableResponse.isResponseCacheable(e)?e:null,this._cacheableResponse=new ae(e)}}ne=[{'revision':null,'url':'2b3e1faf89f94a483539.png'},{'revision':null,'url':'416d91365b44e4b4f477.png'},{'revision':null,'url':'8f2c4d11474275fbc161.png'},{'revision':null,'url':'a0c6cc1401c107b501ef.png'},{'revision':'6a9ba439f8660dfe605fd0c1d5a5d9fa','url':'android-chrome-192x192.png'},{'revision':'554d932bb49ad7788054118063826888','url':'android-chrome-512x512.png'},{'revision':null,'url':'app.6b074801078329b4ceca.js'},{'revision':null,'url':'app.cc0fd7a6dad08954827f.css'},{'revision':'1e1776fddc3bf9fedf6eb96875edf2f6','url':'app.webmanifest'},{'revision':'d4f33820ff59252e769a8f8dc407769d','url':'apple-touch-icon.png'},{'revision':'41b2ffa7889f4dffdf14fb376b132bfb','url':'favicon-16x16.png'},{'revision':'abdbda4f965dfe4cc2f63f5c6dd7d66c','url':'favicon-32x32.png'},{'revision':'f9dcc9b6b00ecd8f1d1a41ef3cde8624','url':'icons/128x128.ico'},{'revision':'e131c356782d082c54cdebe5800ca775','url':'icons/16x16.ico'},{'revision':'41f8f46d8301d9539515f00994c4eb99','url':'icons/24x24.ico'},{'revision':'d0503e83f5b725c4b79c853f8908fc60','url':'icons/256x256.ico'},{'revision':'c6d8b7ea424851ab96770f48da3d5db7','url':'icons/32x32.ico'},{'revision':'c65db640af5eb1cefacef127a95e169f','url':'icons/48x48.ico'},{'revision':'0e5600a8475e88d03b9dae7e16ecdecf','url':'icons/64x64.ico'},{'revision':'a784b3e6b239caa5b3d3cd9079f69a98','url':'icons/72x72.ico'},{'revision':'ee6f05a85dc6db9234c026c2dda3a6ef','url':'icons/80x80.ico'},{'revision':'c9e5877bf8a01b4a4e7e5f7df1821c16','url':'icons/96x96.ico'},{'revision':'5520bedee37496a24bebac4bbd381cc9','url':'icons/9wnqd-7cvvv.zip'},{'revision':'588d9346b5f8bacef5cce7c184d6ec6d','url':'images/default-story.jpg'},{'revision':'604d3391d8d237c606299e9359a9e000','url':'images/offline-map.svg'},{'revision':'588d9346b5f8bacef5cce7c184d6ec6d','url':'images/placeholder-story.jpg'},{'revision':'75b227bedfa098599477b38668e5df4e','url':'index.html'},{'revision':null,'url':'runtime.a3286d8a137de7d9a175.js'},{'revision':null,'url':'vendors.27cf0112390d6e70d606.js'},{'revision':'a09afd57099dc21e9263ff61a08dff24','url':'vendors.27cf0112390d6e70d606.js.LICENSE.txt'}],R().precache(ne),function(e){const t=R();T(new N(t,e))}(undefined),T((({url:e})=>"https://fonts.googleapis.com"===e.origin),new A({cacheName:"google-fonts-stylesheets"})),T((({url:e})=>"https://fonts.gstatic.com"===e.origin),new U({cacheName:"google-fonts-webfonts",plugins:[new ie({statuses:[0,200]}),new se({maxAgeSeconds:31536e3,maxEntries:30})]})),T((({request:e})=>"image"===e.destination),new A({cacheName:"images",plugins:[new ie({statuses:[0,200]}),new se({maxEntries:100,maxAgeSeconds:2592e3})]})),T((({request:e})=>"style"===e.destination||"script"===e.destination),new A({cacheName:"static-resources"})),T((({url:e})=>e.origin===self.location.origin&&e.pathname.startsWith("/api")),new M({cacheName:"api-responses",plugins:[new ie({statuses:[0,200]}),new se({maxEntries:100,maxAgeSeconds:3600})],networkTimeoutSeconds:3})),T((({request:e})=>"navigate"===e.mode),new M({cacheName:"pages",plugins:[new se({maxEntries:50})],networkTimeoutSeconds:3})),T((({url:e})=>e.hostname.includes("tile.openstreetmap.org")),new U({cacheName:"openstreetmap-tiles",plugins:[new ie({statuses:[0,200]}),new se({maxEntries:1e3,maxAgeSeconds:2592e3})]})),T((({url:e})=>e.href.includes("story-api.dicoding.dev/images/stories")),new A({cacheName:"story-api-images",plugins:[new ie({statuses:[0,200]}),new se({maxEntries:200,maxAgeSeconds:1209600})]})),T((({url:e})=>e.pathname.includes("/icons/")),new U({cacheName:"app-icons",plugins:[new ie({statuses:[0,200]}),new se({maxEntries:20,maxAgeSeconds:31536e3})]})),self.addEventListener("install",(e=>{e.waitUntil(caches.open("app-icons").then((e=>e.addAll(["/icons/128x128.ico","/icons/72x72.ico","/icons/256x256.ico","/images/placeholder-story.jpg","/images/default-story.jpg","/images/offline-map.svg"]).catch((e=>{console.log("Failed to cache essential icons:",e)})))))}));const re=()=>new Response('<svg width="300" height="200" xmlns="http://www.w3.org/2000/svg">\n            <rect width="300" height="200" fill="#e0e0e0" />\n            <rect width="80" height="80" x="110" y="50" fill="#bbb" rx="8" />\n            <path d="M135,85 L145,75 Q150,70 155,75 L165,85" stroke="#999" stroke-width="3" fill="none" />\n            <circle cx="138" cy="78" r="5" fill="#999" />\n            <path d="M110,130 L190,130 L190,150 L110,150 Z" fill="#bbb" />\n            <text x="150" y="170" font-family="Arial" font-size="14" text-anchor="middle" fill="#888">Story image unavailable</text>\n            <text x="150" y="188" font-family="Arial" font-size="12" text-anchor="middle" fill="#888">(you are offline)</text>\n        </svg>',{status:200,headers:{"Content-Type":"image/svg+xml","Cache-Control":"no-store"}});self.addEventListener("fetch",(e=>{const t=new URL(e.request.url);"GET"===e.request.method&&(t.pathname.includes("/icons/")?e.respondWith(caches.match(e.request).then((s=>s||fetch(e.request).catch((()=>(console.log("Failed to fetch icon, returning generic icon:",t.pathname),new Response('<svg width="144" height="144" xmlns="http://www.w3.org/2000/svg">\n                            <rect width="144" height="144" fill="#4285f4" rx="12" />\n                            <text x="72" y="80" font-family="Arial" font-size="48" text-anchor="middle" fill="white">App</text>\n                        </svg>',{status:200,headers:{"Content-Type":"image/svg+xml","Cache-Control":"no-store"}}))))))):t.pathname.includes("/images/default-story.jpg")||t.pathname.includes("/default-story.jpg")?e.respondWith(caches.match(e.request).then((t=>t||fetch(e.request).catch((()=>re()))))):t.hostname.includes("tile.openstreetmap.org")?e.respondWith(caches.match(e.request).then((s=>s||fetch(e.request).then((t=>{const s=t.clone();return caches.open("openstreetmap-tiles").then((t=>{t.put(e.request,s)})),t})).catch((()=>(console.log("Failed to fetch map tile, returning placeholder:",t.href),caches.match("/images/offline-map.svg").then((e=>e||new Response('<svg width="256" height="256" xmlns="http://www.w3.org/2000/svg">\n            <rect width="256" height="256" fill="#f0f0f0" />\n            <path d="M0,0 L256,0 L256,256 L0,256 Z" fill="none" stroke="#ddd" />\n            <path d="M64,0 L64,256 M128,0 L128,256 M192,0 L192,256" stroke="#ddd" />\n            <path d="M0,64 L256,64 M0,128 L256,128 M0,192 L256,192" stroke="#ddd" />\n            <text x="128" y="128" font-family="Arial" font-size="14" text-anchor="middle" fill="#888">Map tile unavailable</text>\n            <text x="128" y="148" font-family="Arial" font-size="14" text-anchor="middle" fill="#888">(offline)</text>\n        </svg>',{status:200,headers:{"Content-Type":"image/svg+xml","Cache-Control":"no-store"}}))))))))):t.href.includes("story-api.dicoding.dev/images/stories")?e.respondWith(caches.match(e.request).then((s=>s||fetch(e.request).then((t=>{if(t.ok){const s=t.clone();caches.open("story-api-images").then((t=>{t.put(e.request,s)}))}return t})).catch((()=>(console.log("Failed to fetch story image, returning placeholder:",t.href),caches.match("/images/placeholder-story.jpg").then((e=>e||re())))))))):t.href.includes("leaflet")&&(t.pathname.endsWith(".js")||t.pathname.endsWith(".css")||t.pathname.endsWith(".png"))&&e.respondWith(caches.match(e.request).then((s=>s||fetch(e.request).then((t=>{const s=t.clone();return caches.open("leaflet-resources").then((t=>{t.put(e.request,s)})),t})).catch((e=>{throw console.log("Failed to fetch leaflet resource:",t.href,e),e}))))))})),self.addEventListener("push",(e=>{console.log("Push received:",e);let t={};try{t=e.data.json(),console.log(t)}catch(s){console.error("Error parsing push data:",s),t={title:"New Notification",options:{body:e.data?e.data.text():"No details available",icon:"/icons/128x128.ico"}}}console.log("Notification data:",t);const{title:s,options:n}=t;e.waitUntil(self.registration.showNotification(s,n))})),self.addEventListener("notificationclick",(e=>{e.notification.close(),e.waitUntil(clients.matchAll({type:"window"}).then((e=>{for(const t of e)if("/"===t.url&&"focus"in t)return t.focus();if(clients.openWindow)return clients.openWindow("/")})))})),self.addEventListener("message",(e=>{if(e.data&&"SKIP_WAITING"===e.data.type&&self.skipWaiting(),e.data&&"ONLINE_STATUS"===e.data.type){const t=e.data.online;console.log("App connectivity status changed:",t?"online":"offline")}})),self.addEventListener("activate",(e=>{e.waitUntil(caches.keys().then((e=>{const t=["google-fonts-stylesheets","google-fonts-webfonts","images","static-resources","api-responses","pages","openstreetmap-tiles","story-api-images","app-icons","leaflet-resources"];return Promise.all(e.map((e=>t.includes(e)||e.includes("workbox-precache")?null:(console.log("Deleting old cache:",e),caches.delete(e)))).filter(Boolean))})).then((()=>(console.log("Service Worker activated and claiming clients"),clients.claim()))))}))})();